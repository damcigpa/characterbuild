// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  pass  String 
  likes CharacterBuildLike[]
  comments Comment[]
}

model CharacterBuild {
  name         String
  id           Int           @id @default(autoincrement())
  dexterity    Int           @default(autoincrement())
  vigor        Int           @default(autoincrement())
  image        String?
  likes        Int           @default(0)
  likedBy      CharacterBuildLike[]       
  armors       Armor[]
  weapons      Weapon[]
  talismans    Talisman[]
  sorceries    Sorcery[]
  incantations Incantation[]
  comments     Comment[]
}

model Comment {
  id               Int             @id @default(autoincrement())
  commenterId      Int
  commenter        User            @relation(fields: [commenterId], references: [id], onDelete: Cascade)
  comment          String
  characterBuild   CharacterBuild @relation(fields: [characterBuildId], references: [id])
  characterBuildId Int
}

model CharacterBuildLike {
  userId          Int
  characterBuildId Int
  user            User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  characterBuild  CharacterBuild  @relation(fields: [characterBuildId], references: [id], onDelete: Cascade)

  @@id([userId, characterBuildId]) 
}


model Armor {
  id               Int             @id @default(autoincrement())
  name             String
  url              String
  CharacterBuild   CharacterBuild? @relation(fields: [characterBuildId], references: [id])
  characterBuildId Int?
}

model Weapon {
  id               Int             @id @default(autoincrement())
  name             String
  url              String
  CharacterBuild   CharacterBuild? @relation(fields: [characterBuildId], references: [id])
  characterBuildId Int?
}

model Talisman {
  id               Int             @id @default(autoincrement())
  name             String
  url              String
  CharacterBuild   CharacterBuild? @relation(fields: [characterBuildId], references: [id])
  characterBuildId Int?
}

model Sorcery {
  id               Int             @id @default(autoincrement())
  name             String
  url              String
  CharacterBuild   CharacterBuild? @relation(fields: [characterBuildId], references: [id])
  characterBuildId Int?
}

model Incantation {
  id               Int             @id @default(autoincrement())
  name             String
  url              String
  CharacterBuild   CharacterBuild? @relation(fields: [characterBuildId], references: [id])
  characterBuildId Int?
}
